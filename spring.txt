IOC
<import resource="services.xml"/>
id class name scope constructor-args properties autowire lazy-init init-method destroy-method
p:email="jibe@goja.org" p:personService-ref="personService"
autowire - no byName byType constructor
scopes - singleton prototype request session global-session

<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations" value="classpath:com/foo/jdbc.properties"/>
</bean>
OR
<context:property-placeholder location="classpath:com/foo/jdbc.properties"/>
<property name="username" value="${jdbc.username}"/>
jdbc.username=sa

<context:annotation-config/> not required when adding
<context:component-scan base-package="org.goja"/>

@Required - setters
@Autowired(required=false) - setters contstructors fields
@Qualifier
@Component @Repository @Service @Controller class
@Configuration class with @Bean
@Bean bean definition, same as <bean>. return new beanImpl();
@Scope("singleton")
@Lazy
@Import(Config.class)
@ImportResource("classpath:/com/acme/properties-config.xml")
private @Value("${jdbc.url}") String url;

JSR-250
@Resource(name="myBean") - autowire by name, setters fields
@PostConstruct @PreDestroy

JSR-330
@Inject same as @Autowired
@Named("myBean") same as @Component

ReloadableResourceBundleMessageSource


MVC
@RequestMapping(value="/owners/{ownerId}", method=RequestMethod.GET)
@PathVariable("ownerId") String owner OR @PathVariable String ownerId
@RequestParam("categoryId") Long categoryId
@ModelAttribute on method & as parameter
@SessionAttributes


VALIDATION
add validator to classpath
<mvc:annotation-driven/>
@NotNull @NotBlank @Size @Min ...
@Valid @ModelAttribute(...) BindingResult
@InitBinder


TX
<tx:annotation-driven />
@Transactional
propagation required requires_new nested supports not_supported mandatory never

I	 dirty NRR phantom
RU 				
RC 		x		
RR 		x	x	
S 		x	x	x

readOnly timeout rollbackFor/noRollbackFor




JPA
@Entity @EntityListeners @Table @Id @GeneratedValue @Column @JoinColumn
@Enumerated @Basic @Lob @JoinTable
@OneToOne @OneToMany @ManyToOne @ManyToMany
@MappedSuperclass @Version
@PrePersist @PostPersist @PreRemove @PostRemove @PreUpdate @PostUpdate @PostLoad
@NamedQuery @NamedNativeQuery @SqlResultSetMapping
@EntityResult @FieldResult @ColumnResult
@PersistenceContext @Embeddable @Embedded
@OrderBy @OrderColumn
@Temporal @Transient 
@SequenceGenerator @TableGenerator

READ WRITE OPTIMISTIC OPTIMISTIC_FORCE_INCREMENT PESSIMISTIC_READ
PESSIMISTIC_WRITE PESSIMISTIC_FORCE_INCREMENT NONE
ALL PERSIST MERGE REMOVE REFRESH DETACH



